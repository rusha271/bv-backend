# Docker Compose configuration for Brahma Vastu Backend
# This file sets up the complete application stack with database

version: '3.8'

services:
  # MySQL Database (Local Development)
  mysql:
    image: mysql:8.0
    container_name: bv-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: brahmavastu
      MYSQL_USER: bvuser
      MYSQL_PASSWORD: bv_password
      # MySQL configuration for development
      MYSQL_INITDB_SKIP_TZINFO: 1
    volumes:
      - mysql_data:/var/lib/mysql
      - ./deployment/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"  # Expose for local development access
    networks:
      - bv-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      timeout: 20s
      retries: 10
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # FastAPI Application
  app:
    build: .
    container_name: bv-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=mysql+pymysql://bvuser:bv_password@mysql:3306/brahmavastu
      - JWT_SECRET_KEY=your-development-secret-key-here
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - FRONTEND_ORIGINS=["http://localhost:3000", "http://localhost:3001", "http://localhost:3002"]
      - ENCRYPTION_KEY=your-development-encryption-key-here
      - SECRET_KEY=your-development-secret-key-here
      - LOG_LEVEL=DEBUG
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./app/static:/app/app/static
    expose:
      - "8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - bv-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bv-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./uploads:/var/www/bv-backend/uploads
      - ./app/static:/var/www/bv-backend/app/static
    depends_on:
      - app
    networks:
      - bv-network
  
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  bv-network:
    driver: bridge

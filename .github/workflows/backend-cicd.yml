name: Deploy Brahma Vastu Backend to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Copy production environment file
        run: |
          cp env.production .env.production
          echo "‚úÖ Production environment file copied successfully"
          echo "üìã Environment variables loaded:"
          echo "- ENVIRONMENT: $(grep ENVIRONMENT .env.production | cut -d'=' -f2)"
          echo "- DATABASE_URL: $(grep DATABASE_URL .env.production | cut -d'=' -f2 | cut -c1-20)..."
          echo "- FRONTEND_ORIGINS: $(grep FRONTEND_ORIGINS .env.production | cut -d'=' -f2)"

      - name: Build Docker image
        run: docker build -t rushabhbackend04/bv_backend:latest -f ./Dockerfile .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Publish Docker image
        run: docker push rushabhbackend04/bv_backend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fix Docker permissions
        run: |
          sudo chmod 666 /var/run/docker.sock || true
          sudo chown root:docker /var/run/docker.sock || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Copy production environment file
        run: |
          cp env.production .env.production
          echo "‚úÖ Production environment file copied for deployment"

      - name: Stop and remove old containers
        run: |
          docker stop bv-backend-container || true
          docker rm bv-backend-container || true
          docker stop bv-mysql-container || true
          docker rm bv-mysql-container || true

      - name: Start MySQL database
        run: |
          docker run -d \
            --name bv-mysql-container \
            --restart unless-stopped \
            -e MYSQL_ROOT_PASSWORD=BvR00t@1234 \
            -e MYSQL_DATABASE=brahmavastu \
            -e MYSQL_USER=root \
            -e MYSQL_PASSWORD=BvR00t@1234 \
            -p 3306:3306 \
            -v bv-mysql-data:/var/lib/mysql \
            mysql:8.0

      - name: Wait for MySQL to be ready
        run: |
          echo "‚è≥ Waiting for MySQL to be ready..."
          timeout 60 bash -c 'until docker exec bv-mysql-container mysqladmin ping -h"localhost" --silent; do sleep 2; done'
          echo "‚úÖ MySQL is ready!"

      - name: Initialize database
        run: |
          echo "üóÑÔ∏è Initializing database..."
          docker exec bv-mysql-container mysql -u root -pBvR00t@1234 -e "CREATE DATABASE IF NOT EXISTS brahmavastu;"
          echo "‚úÖ Database initialized successfully!"

      - name: Pull Docker image
        run: docker pull rushabhbackend04/bv_backend:latest

      - name: Run database migrations with Alembic
        run: |
          echo "üîÑ Running Alembic database migrations..."
          docker run --rm \
            --name bv-migration-container \
            --network host \
            --env-file .env.production \
            -v /var/log/bv-backend:/app/logs \
            -v /var/www/bv-backend/uploads:/app/uploads \
            rushabhbackend04/bv_backend:latest \
            sh -c "alembic upgrade head"
          echo "‚úÖ Database migrations completed successfully!"

      - name: Run Backend Docker container
        run: |
          docker run -d \
            --name bv-backend-container \
            --restart unless-stopped \
            -p 8000:8000 \
            --env-file .env.production \
            -v /var/log/bv-backend:/app/logs \
            -v /var/www/bv-backend/uploads:/app/uploads \
            --network host \
            rushabhbackend04/bv_backend:latest

      - name: Wait for application startup
        run: |
          echo "‚è≥ Waiting for application to start..."
          sleep 15

      - name: Health check
        run: |
          echo "üè• Running health checks..."
          curl -f http://localhost:8000/health || exit 1
          echo "‚úÖ Health check passed!"

      - name: Verify database connection
        run: |
          echo "üîç Verifying database connection..."
          docker exec bv-backend-container python -c "
          from app.core.database_config import engine
          from sqlalchemy import text
          with engine.connect() as conn:
              result = conn.execute(text('SELECT 1'))
              print('‚úÖ Database connection verified!')
          "

      - name: Notify deployment
        run: |
          echo "üéâ Backend deployed successfully!"
          echo "üìä Deployment Summary:"
          echo "- API available at: http://localhost:8000"
          echo "- Frontend domain: https://bharmaspace.com"
          echo "- Health check: http://localhost:8000/health"
          echo "- Database: MySQL running on port 3306"
          echo "- Alembic migrations: Completed successfully"
          echo "- Container status: Running"
